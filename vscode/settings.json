{
	"[c]": {
		"editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
	},
	"[cpp]": {
		"editor.defaultFormatter": "xaver.clang-format"
	},
	"[go]": {
		"editor.defaultFormatter": "golang.go"
	},
	"[html]": {
		"editor.defaultFormatter": "vscode.html-language-features"
	},
	"[json]": {
		"editor.defaultFormatter": "vscode.json-language-features"
	},
	"[jsonc]": {
		"editor.defaultFormatter": "vscode.json-language-features"
	},
	"[python]": {
		"editor.defaultFormatter": "ms-python.python",
		"editor.insertSpaces": true,
		"editor.tabSize": 4
	},
	"C_Cpp.autocompleteAddParentheses": true,
	"C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google}",
	"C_Cpp.formatting": "Default",
	"c-cpp-compile-run.c-compiler": "F:\\CodeBlocks\\MinGW\\bin\\gcc.exe",
	"c-cpp-compile-run.cpp-compiler": "F:\\CodeBlocks\\MinGW\\bin\\g++.exe",
	"C_Cpp.intelliSenseEngine": "Disabled",
	"C_Cpp.intelliSenseEngineFallback": "Disabled",
	"C_Cpp.vcFormat.indent.braces": true,
	"C_Cpp.vcFormat.indent.caseContentsWhenBlock": true,
	"clang-format.executable": "",
	"clangd.arguments": [
		// "--compile-commands-dir=${workspaceFolder}/build", // compile data base path
		"--query-driver=/usr/bin/clang-*,/usr/bin/g++-*",
		"--background-index", // 后台建立索引，并持久化到disk
		"--clang-tidy", // 开启clang-tidy
		// 指定clang-tidy的检查参数， 摘抄自cmu15445. 全部参数可参考 https://clang.llvm.org/extra/clang-tidy/checks
		"--clang-tidy-checks=bugprone-*, clang-analyzer-*, google-*, modernize-*, performance-*, portability-*, readability-*, -bugprone-too-small-loop-variable, -clang-analyzer-cplusplus.NewDelete, -clang-analyzer-cplusplus.NewDeleteLeaks, -modernize-use-nodiscard, -modernize-avoid-c-arrays, -readability-magic-numbers, -bugprone-branch-clone, -bugprone-signed-char-misuse, -bugprone-unhandled-self-assignment, -clang-diagnostic-implicit-int-float-conversion, -modernize-use-auto, -modernize-use-trailing-return-type, -readability-convert-member-functions-to-static, -readability-make-member-function-const, -readability-qualified-auto, -readability-redundant-access-specifiers,",
		"--completion-style=detailed",
		"--cross-file-rename=true",
		"--header-insertion=iwyu",
		"--pch-storage=memory",
		// 启用这项时，补全函数时，将会给参数提供占位符，键入后按 Tab 可以切换到下一占位符
		"--function-arg-placeholders=false",
		"--log=verbose",
		"--ranking-model=decision_forest",
		// 输入建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分
		"--header-insertion-decorators",
		"-j=12",
		"--pretty"
		// 建议排序模型
	],
	"cmake.build.workspaceTargets": [],
	"cmake.buildDirectory": "${workspaceFolder}/cmake-build",
	"cmake.configureOnOpen": true,
	"cmake.copyCompileCommands": "${workspaceFolder}/build/compile_commands.json",
	"cmake.cpptools.intelliSenseMode": "gcc-x64",
	"cmake.default.buildDirectory": "${workspaceFolder}/cmake-build",
	"debug.console.fontSize": 16,
	"diffEditor.maxComputationTime": 0,
	"diffEditor.wordWrap": "off",
	"doxdocgen.generic.authorEmail": "atheonealone37@gmail.com",
	"doxdocgen.generic.authorName": "raven",
	"editor.cursorSurroundingLines": 8,
	"editor.cursorBlinking": "solid",
	"editor.cursorStyle": "line",
	"editor.fontFamily": "Hack Nerd Font",
	"editor.fontSize": 16,
	"editor.formatOnSaveMode": "modifications",
	"editor.inlineSuggest.enabled": true,
	"editor.insertSpaces": false,
	"editor.largeFileOptimizations": false,
	"editor.lineNumbers": "on",
	"editor.minimap.enabled": false,
	"editor.mouseWheelZoom": false,
	"editor.renderWhitespace": "boundary",
	"editor.snippetSuggestions": "bottom",
	"editor.suggestSelection": "first",
	"editor.tabCompletion": "on",
	"editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
	"errorLens.enabled": true,
	"errorLens.enabledDiagnosticLevels": [
		"error",
		"warning"
	],
	"explorer.confirmDelete": false,
	"explorer.confirmDragAndDrop": false,
	"fileheader.Author": "zhu.yongxing",
	"fileheader.LastModifiedBy": "zhu.yongxing",
	"files.autoGuessEncoding": true,
	"files.autoSave": "onFocusChange",
	"files.eol": "\n",
	"files.exclude": {
		"**/.classpath": true,
		"**/.factorypath": true,
		"**/.project": true,
		"**/.settings": true
	},
	"git.autofetch": true,
	"git.suggestSmartCommit": false,
	"github.copilot.enable": {
		"*": true,
		"c": true,
		"cpp": true,
		"go": true,
		"markdown": false,
		"plaintext": false,
		"yaml": false
	},
	"go.autocompleteUnimportedPackages": true,
	"go.buildOnSave": "off",
	"go.coverageOptions": "showCoveredCodeOnly",
	"go.toolsManagement.autoUpdate": true,
	"http.proxySupport": "off",
	"prettier.tabWidth": 4,
	"python.languageServer": "Default",
	"python.terminal.activateEnvironment": false,
	"remote.SSH.configFile": "~/.ssh/config",
	"remote.SSH.remotePlatform": {
		"8.130.175.163": "linux"
	},
	"remote.SSH.showLoginTerminal": true,
	"remote.SSH.useLocalServer": false,
	"scss.lint.duplicateProperties": "warning",
	"security.workspace.trust.untrustedFiles": "open",
	"settingsSync.ignoredSettings": [
		"editor.fontFamily"
	],
	"svg.preview.mode": "svg",
	"terminal.external.linuxExec": "/usr/bin/alacritty",
	"terminal.external.osxExec": "iTerm.app",
	"terminal.integrated.cwd": "",
	"terminal.integrated.defaultProfile.linux": "fish",
	"terminal.integrated.fontSize": 18,
	"testExplorer.hideEmptyLog": false,
	"testMate.cpp.debug.configTemplate": {
		"args": "${argsArray}",
		"cwd": "${cwd}",
		"darwin": {
			"MIMode": "lldb",
			"type": "cppdbg"
		},
		"env": "${envObj}",
		"environment": "${envObjArray}",
		"linux": {
			"MIMode": "gdb",
			"type": "cppdbg"
		},
		"program": "${exec}",
		"setupCommands": [
			{
				"description": "Enable pretty-printing for gdb",
				"ignoreFailures": true,
				"text": "-enable-pretty-printing"
			}
		],
		"sourceFileMap": "${sourceFileMapObj}",
		"type": "cppvsdbg",
		"win32": {
			"type": "cppvsdbg"
		}
	},
	"testMate.cpp.log.logpanel": true,
	"testMate.cpp.log.logSentry": "enable",
	/* vim settings start */
	"vim.camelCaseMotion.enable": true,
	"vim.easymotion": true,
	"vim.foldfix": true, // to avoid fold open up autocamatically
	"vim.sneak": false,
	"vim.surround": true,
	"vim.useCtrlKeys": false,
	"vim.useSystemClipboard": true,
	"vim.vimrc.enable": true,
	"vim.vimrc.path": "/Users/nero/Developments/leetcode/c:\\Users\\Yonxean\\.vsvimrc",
	"vim.handleKeys": {
		"<C-a>": false,
		"<C-f>": false,
		"<C-i>": true,
		"<C-o>": true,
		"<C-r>": true,
		"<C-s>": false,
		"<C-v>": true,
		"<C-w>": true
	},
	"vim.hlsearch": true,
	"vim.incsearch": true,
	"vim.leader": ";",
	"vim.normalModeKeyBindings": [
		{ // which key
			"before": [
				"<space>"
			],
			"commands": [
				"whichkey.show"
			]
		}
	],
	"vim.normalModeKeyBindingsNonRecursive": [
		{
			"before": [
				"<leader>",
				"f"
			],
			"commands": [
				"editor.action.formatDocument"
			]
		},
		{
			"before": [
				"K"
			],
			"after": [
				"5",
				"k"
			],
		},
		{
			"before": [
				"J"
			],
			"after": [
				"5",
				"j"
			],
		},
		{
			"before": [
				"<leader>",
				"u"
			],
			"commands": [
				"editor.action.referenceSearch.trigger"
			]
		},
		{
			"before": [
				"<leader>",
				"U"
			],
			"commands": [
				"references-view.findReferences"
			]
		},
		{
			"before": [
				"<leader>",
				"i",
				"n"
			],
			"commands": [
				"references-view.showCallHierarchy"
			]
		},
		// -- run
		{
			"before": [
				"<leader>",
				"r"
			],
			"commands": [
				"workbench.action.files.save",
				"workbench.action.debug.run"
			]
		},
		{
			"before": [
				"<leader>",
				"d",
				"r"
			],
			"commands": [
				"workbench.action.files.save",
				"workbench.action.debug.start"
			]
		},
		// -- debug
		{
			"before": [
				"<leader>",
				"d",
				"b"
			],
			"commands": [
				"editor.debug.action.toggleBreakpoint"
			]
		},
		{
			"before": [
				"<leader>",
				"d",
				"c"
			],
			"commands": [
				"editor.debug.action.conditionalBreakpoint"
			]
		},
		// -- problem nav
		{
			"before": [
				"<leader>",
				"d",
				"k"
			],
			"commands": [
				"editor.action.marker.prev"
			]
		},
		{
			"before": [
				"<leader>",
				"d",
				"j"
			],
			"commands": [
				"editor.action.marker.next"
			]
		},
		// -- git hunk nav
		{
			"before": [
				"<leader>",
				"h",
				"k"
			],
			"commands": [
				"workbench.action.editor.previousChange",
				"editor.action.dirtydiff.previous"
			]
		},
		{
			"before": [
				"<leader>",
				"h",
				"j"
			],
			"commands": [
				"workbench.action.editor.nextChange",
				"editor.action.dirtydiff.next"
			]
		},
		// git (un)stage 
		{
			"before": [
				"<leader>",
				"h",
				"s"
			],
			"commands": [
				"git.stage",
			]
		},
		{
			"before": [
				"<leader>",
				"h",
				"u"
			],
			"commands": [
				"git.unstage",
			]
		},
		{
			"before": [
				"<leader>",
				"h",
				"r"
			],
			"commands": [
				"git.revertSelectedRanges",
			]
		},
		// -- rename symbol
		{
			"before": [
				"<leader>",
				"r",
				"n"
			],
			"commands": [
				"editor.action.rename",
			]
		},
	],
	"vim.visualModeKeyBindings": [
		{ // which key
			"before": [
				"<space>"
			],
			"commands": [
				"whichkey.show"
			]
		},
		// repeatly indent in visual mode
		{
			"before": [
				">"
			],
			"commands": [
				"editor.action.indentLines"
			]
		},
		{
			"before": [
				"<"
			],
			"commands": [
				"editor.action.outdentLines"
			]
		}
	],
	"vim.visualModeKeyBindingsNonRecursive": [
		{
			"before": [
				"<leader>",
				"f"
			],
			"commands": [
				"editor.action.formatSelection"
			]
		},
		{
			"before": [
				"K"
			],
			"after": [
				"5",
				"k"
			],
			"silent": true
		},
		{
			"before": [
				"J"
			],
			"after": [
				"5",
				"j"
			],
		},
		{ // p action will not override clipboard content
			"before": [
				"p"
			],
			"after": [
				"p",
				"g",
				"v",
				"y",
			]
		},
	],
	/* vim settings end */
	"vsicons.dontShowNewVersionMessage": true,
	/* which key bindings */
	"whichkey.bindings": [
		{
			"key": "e",
			"name": "Show tree/explorer view",
			"type": "conditional",
			"bindings": [
				{
					"key": "",
					"name": "default",
					"type": "command",
					"command": "workbench.view.explorer"
				},
				{
					"key": "when:sideBarVisible && explorerViewletVisible",
					"name": "Hide explorer",
					"type": "command",
					"command": "workbench.action.toggleSidebarVisibility"
				}
			],
		},
		{
			"key": "o",
			"name": "Outline",
			"type": "conditional",
			"bindings": [
				{
					"key": "",
					"name": "default",
					"type": "command",
					"command": "extension.multiCommand.execute",
					"args": {
						"sequence": [
							"outline.focus",
							"outline.focus",
						]
					},
				},
				{
					"key": "when:outlinerExplorerView.active && view.outline.visible",
					"name": "Hide outline",
					"type": "command",
					"command": "workbench.action.toggleAuxiliaryBar"
				}
			],
		},
		{
			"key": "g",
			"name": "Source contrl",
			"type": "command",
			"command": "workbench.view.scm",
		},
		{
			"command": "workbench.action.quickOpen",
			"key": "f",
			"name": "Find file",
			"type": "command"
		},
		{
			"command": "workbench.view.search",
			"key": "w",
			"name": "Search Word",
			"type": "command"
		},
		{
			"command": "search.action.openEditor",
			"key": "F",
			"name": "New Search Editor",
			"type": "command"
		},
		{
			"command": "workbench.action.gotoSymbol",
			"key": "s",
			"name": "Search document symbol",
			"type": "command"
		},
		{
			"command": "workbench.action.showAllSymbols",
			"key": "S",
			"name": "Search project symbol",
			"type": "command"
		},
	],
	"window.zoomLevel": -1,
	"workbench.colorTheme": "Catppuccin",
	"workbench.iconTheme": "vscode-icons",
	"workbench.list.automaticKeyboardNavigation": false,
	"workbench.panel.defaultLocation": "right",
	"workbench.startupEditor": "newUntitledFile"
}