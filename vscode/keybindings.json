[
	//{ // make cursor back to editor
	//	"key": "ctrl+c",
	//	"command": "workbench.action.focusActiveEditorGroup",
	//	"when": "!terminalFocus"
	//},
	{ // make cursor back to editor
		"key": "ctrl+k",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "panelFocus && activePanel"
	},
	{ // make cursor back to editor
		"key": "ctrl+h",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "panelFocus && activePanel"
	},
	{ // window move down
		"key": "ctrl+j",
		"command": "vim.remap",
		"when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
		"args": {
			"after": [
				"<c-w>",
				"j"
			],
		}
	},
	{ // window move up
		"key": "ctrl+k",
		"command": "vim.remap",
		"when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
		"args": {
			"after": [
				"<c-w>",
				"k"
			],
		}
	},
	{ // window move left
		"key": "ctrl+h",
		"command": "vim.remap",
		"when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
		"args": {
			"after": [
				"<c-w>",
				"h"
			],
		}
	},
	{ // window move right
		"key": "ctrl+l",
		"command": "vim.remap",
		"when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
		"args": {
			"after": [
				"<c-w>",
				"l"
			],
		}
	},
	{ // open file expoler use which key
		"key": "e",
		"command": "whichkey.triggerKey",
		"when": "whichkeyVisible && sideBarVisible && explorerViewletVisible",
		"args": {
			"key": "e",
			"when": "sideBarVisible && explorerViewletVisible"
		},
	},
	{ // open file expoler use which key
		"key": "o",
		"command": "whichkey.triggerKey",
		"when": "whichkeyVisible && outlinerExplorerView.active && view.outline.visible",
		"args": {
			"key": "o",
			"when": "outlinerExplorerView.active && view.outline.visible"
		},
	},
	{ // rename file
		"key": "r",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ // disable old style rename shortcut
		"key": "enter",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ // move down
		"key": "j",
		"command": "list.focusDown",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
  { // move up
		"key": "k",
		"command": "list.focusUp",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ // move down at quick open
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenNavigateNext",
		"when": "inQuickOpen"
	},
	{ // move up at quick open
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenNavigatePrevious",
		"when": "inQuickOpen"
	},
	{ // move down at problem open
		"key": "ctrl+shift+j",
		"command": "list.focusDown",
		"when": "panelFocus && activePanel == 'workbench.panel.markers' "
	},
	{ // move up at problem open
		"key": "ctrl+shift+k",
		"command": "list.focusUp",
		"when": "panelFocus && activePanel == 'workbench.panel.markers' "
	},
	{
		"key": "tab",
		"command": "workbench.action.quickOpenNavigateNext",
		"when": "inQuickOpen"
	},
	{
		"key": "shift+tab",
		"command": "workbench.action.quickOpenNavigatePrevious",
		"when": "inQuickOpen"
	},
	{ // open selected explorer item 
		"key": "enter",
		"command": "list.select",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
	{ // open reference localtion without quit reference view
		"key": "o",
		"command": "revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{ // open reference location with quit reference view
		"key": "enter",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"revealReference",
				"closeReferenceSearch"
			]
		},
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{ // do not close debug view when press enter
		"key": "enter",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.select",
				"workbench.action.togglePanel"
			]
		},
		"when": "panelFocus && !inDebugRepl && activePanel!='workbench.panel.markers'"
	},
	{ // select file to open
		"key": "l",
		"command": "list.select",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{ // toggle folder expand
		"key": "o",
		"command": "list.toggleExpand",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{ // collapse folder
		"key": "h",
		"command": "list.collapse",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{ // new file
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{ // new folder
		"key": "shift+a",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{ // delete file or folder
		"key": "d",
		"command": "deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{ // toggle terminal
		"key": "ctrl+\\",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{ // maxmize terminal
		"key": "ctrl+m",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "terminalFocus"
	},
	{ // find & replace
		"key": "ctrl+f",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{ // disable built-in ctrl + r so thant undo in vim can execute
		"key": "ctrl+r",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{ // quit side bar only when explore is focused
		"key": "q",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'"
	},
	// -- disable a bunch of keybindings which may have conflicts with above keybindings
	{
		"key": "ctrl+p",
		"command": "workbench.action.togglePanel"
	},
	{
		"key": "ctrl+j",
		"command": "-editor.action.insertLineAfter",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+tab",
		"command": "-acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && textInputFocus"
	},
	{
		"key": "ctrl+h",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+h",
		"command": "-java.action.showTypeHierarchy",
		"when": "editorTextFocus && editorLangId == 'java'"
	},
	{
		"key": "ctrl+h",
		"command": "-extension.vim_ctrl+h",
		"when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "alt+2",
		"command": "-workbench.action.openEditorAtIndex2"
	},
	{
		"key": "alt+2",
		"command": "workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "space",
		"command": "-breadcrumbs.revealFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "space",
		"command": "-debug.toggleBreakpoint",
		"when": "breakpointsFocused && !inputFocus"
	},
	{
		"key": "space",
		"command": "-filesExplorer.openFilePreserveFocus",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "space",
		"command": "-list.toggleExpand",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "space",
		"command": "-notification.toggle",
		"when": "notificationFocus"
	},
	{
		"key": "space",
		"command": "-refactorPreview.toggleCheckedState",
		"when": "listFocus && refactorPreview.enabled && !inputFocus"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "v",
		"command": "-magit.reverse-at-point"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+x",
		"command": "-magit.resetting"
	},
	{
		"key": "x",
		"command": "-magit.reset-mixed"
	},
	{
		"key": "ctrl+u x",
		"command": "-magit.reset-hard"
	},
	{
		"key": "y",
		"command": "-magit.show-refs"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	{
		"key": "f6",
		"command": "workbench.action.debug.stepOver",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f8",
		"command": "-workbench.action.debug.stepOver",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f8",
		"command": "workbench.action.debug.stepOut",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f6",
		"command": "-workbench.action.debug.pause",
		"when": "debugState == 'running'"
	},
	{
		"key": "f4",
		"command": "workbench.action.debug.stop",
		"when": "inDebugMode && !focusedSessionIsAttach"
	},
	{
		"key": "ctrl+oem_plus",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+oem_plus",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "enter",
		"command": "-revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{
		"key": "space",
		"command": "whichkey.show",
		"when": "!inputFocus"
	},
	{
		"key": "alt+backspace",
		"command": "git.stageChange"
	},
	{
		"key": "k",
		"command": "-notebook.focusPreviousEditor",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
	},
	{
		"key": "k",
		"command": "-list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "k",
		"command": "-list.focusUp",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+shift+l",
		"command": "workbench.action.nextEditor"
	},
	{
		"key": "shift+cmd+]",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "ctrl+shift+h",
		"command": "workbench.action.previousEditor"
	},
	{
		"key": "shift+cmd+[",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "shift+alt+p",
		"command": "workbench.action.showCommands"
	},
	{
		"key": "ctrl+shift+p",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "ctrl+w",
		"command": "workbench.action.closeAuxiliaryBar"
	},
	{
		"key": "ctrl+shift+t",
		"command": "workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+shift+t",
		"command": "workbench.action.terminal.copySelection",
		"when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.copySelection",
		"when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "ctrl+shift+r",
		"command": "workbench.action.replaceInFiles"
	},
	{
		"key": "ctrl+shift+h",
		"command": "-workbench.action.replaceInFiles"
	},
	{
		"key": "ctrl+w",
		"command": "workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+f4",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "alt+.",
		"command": "editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+.",
		"command": "-editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_plus",
		"command": "workbench.action.zoomIn"
	},
	{
		"key": "ctrl+numpad_add",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "alt+oem_period",
		"command": "problems.action.showQuickFixes",
		"when": "problemFocus"
	},
	{
		"key": "ctrl+oem_period",
		"command": "-problems.action.showQuickFixes",
		"when": "problemFocus"
	},
	{
		"key": "alt+enter",
		"command": "keyboard-quickfix.openQuickFix"
	},
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.gotoSymbol"
	}
]
